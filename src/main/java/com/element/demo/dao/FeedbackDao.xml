<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.element.demo.dao">
    <select id="listAllFeedbacks" resultType="com.element.demo.entity.FeedbackEntity">
        select * from feedback where deleted=0
    </select>
    <select id="listFileFeedbacks" parameterType="String" resultType="com.element.demo.entity.FeedbackEntity">
        select * from feedback where file_name = #{fileName} and deleted=0
    </select>
    <select id="queryFeedbacks" parameterType="com.element.demo.dao.QueryMap" resultType="com.element.demo.entity.FeedbackEntity">
        select * from feedback
        <where>
            deleted = 0
            <if test="from != null">
               and time&gt;=#{from}
            </if>
            <if test="to != null">
               and time&lt;=#{to}
            </if>
            <if test="institution != null and institution != ''">
                and institution_type=#{institution}
            </if>
            <if test="distributedExclusive">
                and distributed=1
            </if>
        </where>
        <if test="limitCount != 0">
            limit #{limitCount}
        </if>
    </select>
    <select id="queryFeedbacksByIds" parameterType="List" resultType="com.element.demo.entity.FeedbackEntity">
        select * from feedback
        <where>
            deleted = 0 and
            <foreach collection="feedbackIds" item="id" open="and (" close=")" separator="or">
                id = #{id}
            </foreach>
        </where>
    </select>
    <select id="selectFileVersion" parameterType="String" resultType="Integer">
        select version from feedback where file_name = #{fileName} ORDER BY id DESC LIMIT 1;
    </select>
    <insert id="insertFeedback" parameterType="com.element.demo.entity.FeedbackEntity">
        insert into feedback (serial_num, time, qa_type, source, institution_type, province, city, district, content_type, content, contact, version, status, file_name) values (#{serialNum}, #{time}, #{qaType}, #{source}, #{institutionType}, #{province}, #{city}, #{district}, #{contentType}, #{content}, #{contact}, #{version}, #{status}, #{fileName})
    </insert>
    <insert id="overrideFeedback" statementType="CALLABLE">
        {call OverrideFeedbackFile(#{fileName,mode=IN}, #{oriVersion, jdbcType=INTEGER, mode=OUT})}
    </insert>
    <update id="autoDistribute">
        update feedback
            set distributed = 1,
                distribute_time = NOW(),
                status = "已分发"
            where distributed = 0 and deleted = 0 and UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(update_time) >= ${timeInterval}
    </update>
    <update id="distribute">
        update feedback
            set distributed = 1,
                distribute_time = NOW(),
                status = "已分发"
            where distributed = 0 and deleted = 0
    </update>
    <update id="distributeOne">
        update feedback
            set distributed = 1,
                distribute_time = NOW(),
                status = "已分发"
            where distributed = 0 and deleted = 0 and id = #{feedbackId}
    </update>
    <update id="distributeSome">
        update feedback
            set distributed = 1,
                distribute_time = NOW(),
                status = "已分发"
        <where>
            <!-- select * from user where distributed = 0 and (id = 1 or id = 2 or id = 3) -->
            distributed = 0 and deleted = 0 and
            <foreach collection="feedbackIds" item="id" open="and (" close=")" separator="or">
                id = #{id}
             </foreach>
        </where>
    </update>

</mapper>